
5_gpio_input.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000150  080001c8  080001c8  000101c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000318  08000320  00010320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000318  08000318  00010320  2**0
                  CONTENTS
  4 .ARM          00000000  08000318  08000318  00010320  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000318  08000320  00010320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000318  08000318  00010318  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800031c  0800031c  0001031c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000320  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000320  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010320  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000365  00000000  00000000  00010350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000c3  00000000  00000000  000106b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010778  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  000107c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001b66d  00000000  00000000  000107f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000548  00000000  00000000  0002be5d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009a690  00000000  00000000  0002c3a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000c6a35  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  000c6a88  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08000300 	.word	0x08000300

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	08000300 	.word	0x08000300

08000208 <main>:
//#define PIN5 				(1U<<5)
#define PIN11				(1U<<11)
#define BTN_PIN				PIN11

int main (void)
{
 8000208:	b480      	push	{r7}
 800020a:	af00      	add	r7, sp, #0
	/* Enable clock access to Port E */
	//RCC->AHB1ENR |= GPIOE_CLK_EN;

	/* Enable clock access to Port I */
	RCC->AHB1ENR |= GPIOI_CLK_EN;
 800020c:	4b13      	ldr	r3, [pc, #76]	; (800025c <main+0x54>)
 800020e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000210:	4a12      	ldr	r2, [pc, #72]	; (800025c <main+0x54>)
 8000212:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000216:	6313      	str	r3, [r2, #48]	; 0x30

	/* Configure LED pins as output pins */
	GPIOI->MODER |= USER_LED1_MODER;
 8000218:	4b11      	ldr	r3, [pc, #68]	; (8000260 <main+0x58>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	4a10      	ldr	r2, [pc, #64]	; (8000260 <main+0x58>)
 800021e:	f043 0304 	orr.w	r3, r3, #4
 8000222:	6013      	str	r3, [r2, #0]

	/* Configure PI11 Push Button as Input Pin */
	GPIOI->MODER &=~ (1U<<22);
 8000224:	4b0e      	ldr	r3, [pc, #56]	; (8000260 <main+0x58>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	4a0d      	ldr	r2, [pc, #52]	; (8000260 <main+0x58>)
 800022a:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800022e:	6013      	str	r3, [r2, #0]
	GPIOI->MODER &=~ (1U<<23);
 8000230:	4b0b      	ldr	r3, [pc, #44]	; (8000260 <main+0x58>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	4a0a      	ldr	r2, [pc, #40]	; (8000260 <main+0x58>)
 8000236:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800023a:	6013      	str	r3, [r2, #0]

	while (1)
	{
		// Check if button is pressed
		if (GPIOI->IDR & BTN_PIN)
 800023c:	4b08      	ldr	r3, [pc, #32]	; (8000260 <main+0x58>)
 800023e:	691b      	ldr	r3, [r3, #16]
 8000240:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000244:	2b00      	cmp	r3, #0
 8000246:	d003      	beq.n	8000250 <main+0x48>
		{
			GPIOI->BSRR = (1U<<1);
 8000248:	4b05      	ldr	r3, [pc, #20]	; (8000260 <main+0x58>)
 800024a:	2202      	movs	r2, #2
 800024c:	619a      	str	r2, [r3, #24]
 800024e:	e7f5      	b.n	800023c <main+0x34>
		}
		else
			GPIOI->BSRR = (1U<<17);
 8000250:	4b03      	ldr	r3, [pc, #12]	; (8000260 <main+0x58>)
 8000252:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000256:	619a      	str	r2, [r3, #24]
		if (GPIOI->IDR & BTN_PIN)
 8000258:	e7f0      	b.n	800023c <main+0x34>
 800025a:	bf00      	nop
 800025c:	40023800 	.word	0x40023800
 8000260:	40022000 	.word	0x40022000

08000264 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000264:	480d      	ldr	r0, [pc, #52]	; (800029c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000266:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000268:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800026c:	480c      	ldr	r0, [pc, #48]	; (80002a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800026e:	490d      	ldr	r1, [pc, #52]	; (80002a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000270:	4a0d      	ldr	r2, [pc, #52]	; (80002a8 <LoopForever+0xe>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000274:	e002      	b.n	800027c <LoopCopyDataInit>

08000276 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000276:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000278:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800027a:	3304      	adds	r3, #4

0800027c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800027c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800027e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000280:	d3f9      	bcc.n	8000276 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000282:	4a0a      	ldr	r2, [pc, #40]	; (80002ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000284:	4c0a      	ldr	r4, [pc, #40]	; (80002b0 <LoopForever+0x16>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000288:	e001      	b.n	800028e <LoopFillZerobss>

0800028a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800028a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800028c:	3204      	adds	r2, #4

0800028e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800028e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000290:	d3fb      	bcc.n	800028a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000292:	f000 f811 	bl	80002b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000296:	f7ff ffb7 	bl	8000208 <main>

0800029a <LoopForever>:

LoopForever:
    b LoopForever
 800029a:	e7fe      	b.n	800029a <LoopForever>
  ldr   r0, =_estack
 800029c:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 80002a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002a4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002a8:	08000320 	.word	0x08000320
  ldr r2, =_sbss
 80002ac:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b0:	2000001c 	.word	0x2000001c

080002b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002b4:	e7fe      	b.n	80002b4 <ADC_IRQHandler>
	...

080002b8 <__libc_init_array>:
 80002b8:	b570      	push	{r4, r5, r6, lr}
 80002ba:	4d0d      	ldr	r5, [pc, #52]	; (80002f0 <__libc_init_array+0x38>)
 80002bc:	4c0d      	ldr	r4, [pc, #52]	; (80002f4 <__libc_init_array+0x3c>)
 80002be:	1b64      	subs	r4, r4, r5
 80002c0:	10a4      	asrs	r4, r4, #2
 80002c2:	2600      	movs	r6, #0
 80002c4:	42a6      	cmp	r6, r4
 80002c6:	d109      	bne.n	80002dc <__libc_init_array+0x24>
 80002c8:	4d0b      	ldr	r5, [pc, #44]	; (80002f8 <__libc_init_array+0x40>)
 80002ca:	4c0c      	ldr	r4, [pc, #48]	; (80002fc <__libc_init_array+0x44>)
 80002cc:	f000 f818 	bl	8000300 <_init>
 80002d0:	1b64      	subs	r4, r4, r5
 80002d2:	10a4      	asrs	r4, r4, #2
 80002d4:	2600      	movs	r6, #0
 80002d6:	42a6      	cmp	r6, r4
 80002d8:	d105      	bne.n	80002e6 <__libc_init_array+0x2e>
 80002da:	bd70      	pop	{r4, r5, r6, pc}
 80002dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80002e0:	4798      	blx	r3
 80002e2:	3601      	adds	r6, #1
 80002e4:	e7ee      	b.n	80002c4 <__libc_init_array+0xc>
 80002e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ea:	4798      	blx	r3
 80002ec:	3601      	adds	r6, #1
 80002ee:	e7f2      	b.n	80002d6 <__libc_init_array+0x1e>
 80002f0:	08000318 	.word	0x08000318
 80002f4:	08000318 	.word	0x08000318
 80002f8:	08000318 	.word	0x08000318
 80002fc:	0800031c 	.word	0x0800031c

08000300 <_init>:
 8000300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000302:	bf00      	nop
 8000304:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000306:	bc08      	pop	{r3}
 8000308:	469e      	mov	lr, r3
 800030a:	4770      	bx	lr

0800030c <_fini>:
 800030c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800030e:	bf00      	nop
 8000310:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000312:	bc08      	pop	{r3}
 8000314:	469e      	mov	lr, r3
 8000316:	4770      	bx	lr
