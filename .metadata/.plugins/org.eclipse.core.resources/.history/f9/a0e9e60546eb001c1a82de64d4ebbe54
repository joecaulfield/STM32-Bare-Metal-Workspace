
14_InputInterrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000268  080001c8  080001c8  000101c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000430  08000438  00010438  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000430  08000430  00010438  2**0
                  CONTENTS
  4 .ARM          00000000  08000430  08000430  00010438  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000430  08000438  00010438  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000430  08000430  00010430  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000434  08000434  00010434  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010438  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000438  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000438  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010438  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d45  00000000  00000000  00010468  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000030b  00000000  00000000  000111ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  000114b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000080  00000000  00000000  00011570  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001076  00000000  00000000  000115f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000117b  00000000  00000000  00012666  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009edb4  00000000  00000000  000137e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000b2595  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000174  00000000  00000000  000b25e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08000418 	.word	0x08000418

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	08000418 	.word	0x08000418

08000208 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000208:	b480      	push	{r7}
 800020a:	b083      	sub	sp, #12
 800020c:	af00      	add	r7, sp, #0
 800020e:	4603      	mov	r3, r0
 8000210:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000212:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000216:	2b00      	cmp	r3, #0
 8000218:	db0b      	blt.n	8000232 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800021a:	79fb      	ldrb	r3, [r7, #7]
 800021c:	f003 021f 	and.w	r2, r3, #31
 8000220:	4907      	ldr	r1, [pc, #28]	; (8000240 <__NVIC_EnableIRQ+0x38>)
 8000222:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000226:	095b      	lsrs	r3, r3, #5
 8000228:	2001      	movs	r0, #1
 800022a:	fa00 f202 	lsl.w	r2, r0, r2
 800022e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000232:	bf00      	nop
 8000234:	370c      	adds	r7, #12
 8000236:	46bd      	mov	sp, r7
 8000238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800023c:	4770      	bx	lr
 800023e:	bf00      	nop
 8000240:	e000e100 	.word	0xe000e100

08000244 <pi11_exti_init>:
#define SYSCFGEN		(1U<<14)



void pi11_exti_init(void)
{
 8000244:	b580      	push	{r7, lr}
 8000246:	af00      	add	r7, sp, #0
	/* Enable clock access to Port I */
	RCC->AHB1ENR |= GPIO_I_EN;
 8000248:	4b23      	ldr	r3, [pc, #140]	; (80002d8 <pi11_exti_init+0x94>)
 800024a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024c:	4a22      	ldr	r2, [pc, #136]	; (80002d8 <pi11_exti_init+0x94>)
 800024e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000252:	6313      	str	r3, [r2, #48]	; 0x30

	/* Set PI11 as Input */
	GPIOI->MODER &=~ (1U<<22);
 8000254:	4b21      	ldr	r3, [pc, #132]	; (80002dc <pi11_exti_init+0x98>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	4a20      	ldr	r2, [pc, #128]	; (80002dc <pi11_exti_init+0x98>)
 800025a:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800025e:	6013      	str	r3, [r2, #0]
	GPIOI->MODER &=~ (1U<<23);
 8000260:	4b1e      	ldr	r3, [pc, #120]	; (80002dc <pi11_exti_init+0x98>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	4a1d      	ldr	r2, [pc, #116]	; (80002dc <pi11_exti_init+0x98>)
 8000266:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800026a:	6013      	str	r3, [r2, #0]

	/* Enable Clock Access to SYSCFG Module */
	RCC->APB2ENR |= SYSCFGEN;
 800026c:	4b1a      	ldr	r3, [pc, #104]	; (80002d8 <pi11_exti_init+0x94>)
 800026e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000270:	4a19      	ldr	r2, [pc, #100]	; (80002d8 <pi11_exti_init+0x94>)
 8000272:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000276:	6453      	str	r3, [r2, #68]	; 0x44

	/* Clear port selection for EXTI11 */
	SYSCFG->EXTICR[2] &=~ (1U<<12);
 8000278:	4b19      	ldr	r3, [pc, #100]	; (80002e0 <pi11_exti_init+0x9c>)
 800027a:	691b      	ldr	r3, [r3, #16]
 800027c:	4a18      	ldr	r2, [pc, #96]	; (80002e0 <pi11_exti_init+0x9c>)
 800027e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000282:	6113      	str	r3, [r2, #16]
	SYSCFG->EXTICR[2] &=~ (1U<<13);
 8000284:	4b16      	ldr	r3, [pc, #88]	; (80002e0 <pi11_exti_init+0x9c>)
 8000286:	691b      	ldr	r3, [r3, #16]
 8000288:	4a15      	ldr	r2, [pc, #84]	; (80002e0 <pi11_exti_init+0x9c>)
 800028a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800028e:	6113      	str	r3, [r2, #16]
	SYSCFG->EXTICR[2] &=~ (1U<<14);
 8000290:	4b13      	ldr	r3, [pc, #76]	; (80002e0 <pi11_exti_init+0x9c>)
 8000292:	691b      	ldr	r3, [r3, #16]
 8000294:	4a12      	ldr	r2, [pc, #72]	; (80002e0 <pi11_exti_init+0x9c>)
 8000296:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800029a:	6113      	str	r3, [r2, #16]
	SYSCFG->EXTICR[2] &=~ (1U<<15);
 800029c:	4b10      	ldr	r3, [pc, #64]	; (80002e0 <pi11_exti_init+0x9c>)
 800029e:	691b      	ldr	r3, [r3, #16]
 80002a0:	4a0f      	ldr	r2, [pc, #60]	; (80002e0 <pi11_exti_init+0x9c>)
 80002a2:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80002a6:	6113      	str	r3, [r2, #16]

	/* Select PI11 for EXTI11 */
		// Bits 12, 13, 14, 15 in SYSCFG_EXTICR3
		// Set 12,13,14,15 to 1000 aka PI[x]
	SYSCFG->EXTICR[2] |= (1U<<15);
 80002a8:	4b0d      	ldr	r3, [pc, #52]	; (80002e0 <pi11_exti_init+0x9c>)
 80002aa:	691b      	ldr	r3, [r3, #16]
 80002ac:	4a0c      	ldr	r2, [pc, #48]	; (80002e0 <pi11_exti_init+0x9c>)
 80002ae:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80002b2:	6113      	str	r3, [r2, #16]

	/* Unmask EXTI11 */
		// Set Bit 11 of IMR to '1'
	EXTI->IMR |= (1U<<11);
 80002b4:	4b0b      	ldr	r3, [pc, #44]	; (80002e4 <pi11_exti_init+0xa0>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	4a0a      	ldr	r2, [pc, #40]	; (80002e4 <pi11_exti_init+0xa0>)
 80002ba:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80002be:	6013      	str	r3, [r2, #0]

	/* Select Falling Edge Trigger */
		// Set Bit 11 of FTSR to '1'
	EXTI->FTSR |= (1U<<11);
 80002c0:	4b08      	ldr	r3, [pc, #32]	; (80002e4 <pi11_exti_init+0xa0>)
 80002c2:	68db      	ldr	r3, [r3, #12]
 80002c4:	4a07      	ldr	r2, [pc, #28]	; (80002e4 <pi11_exti_init+0xa0>)
 80002c6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80002ca:	60d3      	str	r3, [r2, #12]

	/* Enable EXTI11 in NVIC */
	NVIC_EnableIRQ(EXTI15_10_IRQn);
 80002cc:	2028      	movs	r0, #40	; 0x28
 80002ce:	f7ff ff9b 	bl	8000208 <__NVIC_EnableIRQ>

}
 80002d2:	bf00      	nop
 80002d4:	bd80      	pop	{r7, pc}
 80002d6:	bf00      	nop
 80002d8:	40023800 	.word	0x40023800
 80002dc:	40022000 	.word	0x40022000
 80002e0:	40013800 	.word	0x40013800
 80002e4:	40013c00 	.word	0x40013c00

080002e8 <user_leds_init>:
#include "led.h"
#include "stm32f7xx.h"

void user_leds_init(void)
{
 80002e8:	b480      	push	{r7}
 80002ea:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOI_CLK_EN;
 80002ec:	4b08      	ldr	r3, [pc, #32]	; (8000310 <user_leds_init+0x28>)
 80002ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f0:	4a07      	ldr	r2, [pc, #28]	; (8000310 <user_leds_init+0x28>)
 80002f2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002f6:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOI->MODER |= USER_LED1_MODER;
 80002f8:	4b06      	ldr	r3, [pc, #24]	; (8000314 <user_leds_init+0x2c>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	4a05      	ldr	r2, [pc, #20]	; (8000314 <user_leds_init+0x2c>)
 80002fe:	f043 0304 	orr.w	r3, r3, #4
 8000302:	6013      	str	r3, [r2, #0]
}
 8000304:	bf00      	nop
 8000306:	46bd      	mov	sp, r7
 8000308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800030c:	4770      	bx	lr
 800030e:	bf00      	nop
 8000310:	40023800 	.word	0x40023800
 8000314:	40022000 	.word	0x40022000

08000318 <all_leds_toggle>:
{
	GPIOI->ODR &=~ USER_LED1;
}

void all_leds_toggle(void)
{
 8000318:	b480      	push	{r7}
 800031a:	af00      	add	r7, sp, #0
	GPIOI->ODR ^= USER_LED1;
 800031c:	4b05      	ldr	r3, [pc, #20]	; (8000334 <all_leds_toggle+0x1c>)
 800031e:	695b      	ldr	r3, [r3, #20]
 8000320:	4a04      	ldr	r2, [pc, #16]	; (8000334 <all_leds_toggle+0x1c>)
 8000322:	f083 0302 	eor.w	r3, r3, #2
 8000326:	6153      	str	r3, [r2, #20]
}
 8000328:	bf00      	nop
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	40022000 	.word	0x40022000

08000338 <main>:
#include "systick.h"
#include "tim.h"
#include "exti.h"

int main (void)
{
 8000338:	b580      	push	{r7, lr}
 800033a:	af00      	add	r7, sp, #0
	//uart6_tx_init();

	pi11_exti_init();
 800033c:	f7ff ff82 	bl	8000244 <pi11_exti_init>
	user_leds_init();
 8000340:	f7ff ffd2 	bl	80002e8 <user_leds_init>

	while(1)
 8000344:	e7fe      	b.n	8000344 <main+0xc>

08000346 <user_btn_callback>:
	}

}

static void user_btn_callback(void)
{
 8000346:	b580      	push	{r7, lr}
 8000348:	af00      	add	r7, sp, #0
	//printf("Button Pressed");
	all_leds_toggle();
 800034a:	f7ff ffe5 	bl	8000318 <all_leds_toggle>
}
 800034e:	bf00      	nop
 8000350:	bd80      	pop	{r7, pc}
	...

08000354 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 8000354:	b580      	push	{r7, lr}
 8000356:	af00      	add	r7, sp, #0
	if ((EXTI->PR & PIN11) != 0)
 8000358:	4b07      	ldr	r3, [pc, #28]	; (8000378 <EXTI15_10_IRQHandler+0x24>)
 800035a:	695b      	ldr	r3, [r3, #20]
 800035c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000360:	2b00      	cmp	r3, #0
 8000362:	d007      	beq.n	8000374 <EXTI15_10_IRQHandler+0x20>
	{
		/* Clear PR Flag */
		EXTI->PR |= PIN11;
 8000364:	4b04      	ldr	r3, [pc, #16]	; (8000378 <EXTI15_10_IRQHandler+0x24>)
 8000366:	695b      	ldr	r3, [r3, #20]
 8000368:	4a03      	ldr	r2, [pc, #12]	; (8000378 <EXTI15_10_IRQHandler+0x24>)
 800036a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800036e:	6153      	str	r3, [r2, #20]

		// Do Something
		user_btn_callback();
 8000370:	f7ff ffe9 	bl	8000346 <user_btn_callback>
	}
}
 8000374:	bf00      	nop
 8000376:	bd80      	pop	{r7, pc}
 8000378:	40013c00 	.word	0x40013c00

0800037c <Reset_Handler>:
 800037c:	480d      	ldr	r0, [pc, #52]	; (80003b4 <LoopForever+0x2>)
 800037e:	4685      	mov	sp, r0
 8000380:	f3af 8000 	nop.w
 8000384:	480c      	ldr	r0, [pc, #48]	; (80003b8 <LoopForever+0x6>)
 8000386:	490d      	ldr	r1, [pc, #52]	; (80003bc <LoopForever+0xa>)
 8000388:	4a0d      	ldr	r2, [pc, #52]	; (80003c0 <LoopForever+0xe>)
 800038a:	2300      	movs	r3, #0
 800038c:	e002      	b.n	8000394 <LoopCopyDataInit>

0800038e <CopyDataInit>:
 800038e:	58d4      	ldr	r4, [r2, r3]
 8000390:	50c4      	str	r4, [r0, r3]
 8000392:	3304      	adds	r3, #4

08000394 <LoopCopyDataInit>:
 8000394:	18c4      	adds	r4, r0, r3
 8000396:	428c      	cmp	r4, r1
 8000398:	d3f9      	bcc.n	800038e <CopyDataInit>
 800039a:	4a0a      	ldr	r2, [pc, #40]	; (80003c4 <LoopForever+0x12>)
 800039c:	4c0a      	ldr	r4, [pc, #40]	; (80003c8 <LoopForever+0x16>)
 800039e:	2300      	movs	r3, #0
 80003a0:	e001      	b.n	80003a6 <LoopFillZerobss>

080003a2 <FillZerobss>:
 80003a2:	6013      	str	r3, [r2, #0]
 80003a4:	3204      	adds	r2, #4

080003a6 <LoopFillZerobss>:
 80003a6:	42a2      	cmp	r2, r4
 80003a8:	d3fb      	bcc.n	80003a2 <FillZerobss>
 80003aa:	f000 f811 	bl	80003d0 <__libc_init_array>
 80003ae:	f7ff ffc3 	bl	8000338 <main>

080003b2 <LoopForever>:
 80003b2:	e7fe      	b.n	80003b2 <LoopForever>
 80003b4:	20050000 	.word	0x20050000
 80003b8:	20000000 	.word	0x20000000
 80003bc:	20000000 	.word	0x20000000
 80003c0:	08000438 	.word	0x08000438
 80003c4:	20000000 	.word	0x20000000
 80003c8:	2000001c 	.word	0x2000001c

080003cc <ADC_IRQHandler>:
 80003cc:	e7fe      	b.n	80003cc <ADC_IRQHandler>
	...

080003d0 <__libc_init_array>:
 80003d0:	b570      	push	{r4, r5, r6, lr}
 80003d2:	4d0d      	ldr	r5, [pc, #52]	; (8000408 <__libc_init_array+0x38>)
 80003d4:	4c0d      	ldr	r4, [pc, #52]	; (800040c <__libc_init_array+0x3c>)
 80003d6:	1b64      	subs	r4, r4, r5
 80003d8:	10a4      	asrs	r4, r4, #2
 80003da:	2600      	movs	r6, #0
 80003dc:	42a6      	cmp	r6, r4
 80003de:	d109      	bne.n	80003f4 <__libc_init_array+0x24>
 80003e0:	4d0b      	ldr	r5, [pc, #44]	; (8000410 <__libc_init_array+0x40>)
 80003e2:	4c0c      	ldr	r4, [pc, #48]	; (8000414 <__libc_init_array+0x44>)
 80003e4:	f000 f818 	bl	8000418 <_init>
 80003e8:	1b64      	subs	r4, r4, r5
 80003ea:	10a4      	asrs	r4, r4, #2
 80003ec:	2600      	movs	r6, #0
 80003ee:	42a6      	cmp	r6, r4
 80003f0:	d105      	bne.n	80003fe <__libc_init_array+0x2e>
 80003f2:	bd70      	pop	{r4, r5, r6, pc}
 80003f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80003f8:	4798      	blx	r3
 80003fa:	3601      	adds	r6, #1
 80003fc:	e7ee      	b.n	80003dc <__libc_init_array+0xc>
 80003fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000402:	4798      	blx	r3
 8000404:	3601      	adds	r6, #1
 8000406:	e7f2      	b.n	80003ee <__libc_init_array+0x1e>
 8000408:	08000430 	.word	0x08000430
 800040c:	08000430 	.word	0x08000430
 8000410:	08000430 	.word	0x08000430
 8000414:	08000434 	.word	0x08000434

08000418 <_init>:
 8000418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800041a:	bf00      	nop
 800041c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800041e:	bc08      	pop	{r3}
 8000420:	469e      	mov	lr, r3
 8000422:	4770      	bx	lr

08000424 <_fini>:
 8000424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000426:	bf00      	nop
 8000428:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800042a:	bc08      	pop	{r3}
 800042c:	469e      	mov	lr, r3
 800042e:	4770      	bx	lr
